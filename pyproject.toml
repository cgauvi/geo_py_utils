[tool.poetry]
name = "geo_py_utils"
version = "0.6.0"
description = "Python functions for generic geospatial manipulations"
authors = ["Charles Gauvin"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
addopts =  "-v -m 'not requires_local_pg_connection and not requires_local_docker_pg_connection and not requires_remote_pg_connection and not requires_remote_pg_connection_sfkl_interactivity' "
markers =[
    "requires_local_pg_connection: requires a local postgis db set up.",
    "requires_local_docker_pg_connection: requires a running docker container with postgis DB accepting connections on 80:5432.",
    "requires_remote_pg_connection: requires a remote postgis db set up accepting connections on 5052",
    "requires_remote_pg_connection_sfkl_interactivity:  requires a remote postgis db + sfkl interactive external browser auth USE `-s`  ",
    "requires_or2ogr: requires a working gdal and ogr2ogr executable which can be found"
    ]

[tool.flake8]
    max-complexity = 10
    max-line-length = 100
    extend-ignore = """
        E128,
        E303,
        E251,
        W291
    """

[tool.poetry.dependencies] 
brotlipy = "*"
psycopg2 = "*"
pyarrow = "*"
pyopenssl = "*"
pysocks = "*"
rtree = "*"
unicodedata2 = "*"
python-geohash = "*"
sqlalchemy = "*"
snowflake-connector-python = "*"
flake8 = "*"
geopandas = "*"
pyproj = '3.4.1'
ben_py_utils = { git = "https://github.com/cgauvi/ben_py_utils.git", branch = "master" }

[tool.poetry.group.test.dependencies] 
pytest = "*"

[tool.poetry.group.notebooks.dependencies] 
matplotlib = "*"
seaborn = "*"
folium = "*"
mapclassify = "*"
contextily = "*"
xyzservices = "*"

[tool.poetry.group.notebooks]
optional = true